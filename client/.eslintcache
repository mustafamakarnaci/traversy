[{"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\index.js":"1","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\App.js":"2","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\layout\\Landing.js":"5","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\auth\\Register.js":"7","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reducers\\index.js":"8","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\store.js":"9","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reducers\\alert.js":"10","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\actions\\types.js":"11","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\actions\\alert.js":"12","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\layout\\Alert.js":"13","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\actions\\auth.js":"14","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reducers\\auth.js":"15","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\utils\\setAuthToken.js":"16","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\dashboard\\Dashboard.js":"17","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\routing\\PrivateRoute.js":"18","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reducers\\profile.js":"19","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\actions\\profile.js":"20","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\dashboard\\DashboardActions.js":"23","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\profile-forms\\EditProfile.js":"24","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\profile-forms\\AddExperience.js":"25","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\profile-forms\\AddEducation.js":"26","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\dashboard\\Experience.js":"27","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\dashboard\\Education.js":"28"},{"size":478,"mtime":1610414396509,"results":"29","hashOfConfig":"30"},{"size":2012,"mtime":1613783542537,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1606430374206,"results":"32","hashOfConfig":"30"},{"size":1536,"mtime":1613521083824,"results":"33","hashOfConfig":"30"},{"size":1230,"mtime":1613521362057,"results":"34","hashOfConfig":"30"},{"size":2874,"mtime":1613854708335,"results":"35","hashOfConfig":"30"},{"size":4087,"mtime":1613854277913,"results":"36","hashOfConfig":"30"},{"size":216,"mtime":1613515889399,"results":"37","hashOfConfig":"30"},{"size":391,"mtime":1611362315481,"results":"38","hashOfConfig":"30"},{"size":424,"mtime":1612216757771,"results":"39","hashOfConfig":"30"},{"size":657,"mtime":1613859463447,"results":"40","hashOfConfig":"30"},{"size":374,"mtime":1611451139891,"results":"41","hashOfConfig":"30"},{"size":514,"mtime":1611440885887,"results":"42","hashOfConfig":"30"},{"size":2368,"mtime":1613522781640,"results":"43","hashOfConfig":"30"},{"size":1406,"mtime":1613859639665,"results":"44","hashOfConfig":"30"},{"size":266,"mtime":1612217507587,"results":"45","hashOfConfig":"30"},{"size":2150,"mtime":1613861153317,"results":"46","hashOfConfig":"30"},{"size":587,"mtime":1613515557865,"results":"47","hashOfConfig":"30"},{"size":938,"mtime":1613781189833,"results":"48","hashOfConfig":"30"},{"size":5504,"mtime":1613859533574,"results":"49","hashOfConfig":"30"},{"size":296,"mtime":1613522090451,"results":"50","hashOfConfig":"30"},{"size":7035,"mtime":1613774585325,"results":"51","hashOfConfig":"30"},{"size":690,"mtime":1613771230915,"results":"52","hashOfConfig":"30"},{"size":8369,"mtime":1613782669345,"results":"53","hashOfConfig":"30"},{"size":3532,"mtime":1613782880435,"results":"54","hashOfConfig":"30"},{"size":3547,"mtime":1613860935915,"results":"55","hashOfConfig":"30"},{"size":1584,"mtime":1613859785247,"results":"56","hashOfConfig":"30"},{"size":1569,"mtime":1613859885013,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"skh386",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\index.js",[],["120","121"],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\App.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reducers\\index.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\store.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reducers\\alert.js",["122"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\actions\\types.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\actions\\alert.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\actions\\auth.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reducers\\auth.js",["123"],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\dashboard\\Dashboard.js",["124"],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\reducers\\profile.js",["125","126"],"import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE,UPDATE, UPDATE_PROFILE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {},\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case UPDATE_PROFILE:\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false,\r\n            };\r\n        \r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile:null,\r\n                repos:[],\r\n                loading:false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\actions\\profile.js",["127"],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\layout\\Spinner.js",["128"],"import React, { Fragment } from 'react'\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '100px', margin: 'auto', display: 'block' }}\r\n            alt='Loading...'\r\n        />\r\n    </Fragment>\r\n)","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\profile-forms\\EditProfile.js",["129"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, createProfile, history, getCurrentProfile }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            Location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(history);\r\n        createProfile(formData, history, true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n                Create Your Profile\r\n      </h1>\r\n            <p class=\"lead\">\r\n                <i class=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own or a company website</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername} onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n            username</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n                        Add Social Network Links\r\n          </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {\r\n                    displaySocialInputs && <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile))\r\n\r\n","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\profile-forms\\AddExperience.js",["130","131"],"import React, { useState, Fragment } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: '',\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n\r\n    const { company, title, location, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Add An Experience\r\n      </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addExperience(formData, history);\r\n            }}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                        setFormData({\r\n                            ...formData,\r\n                            current: !current\r\n                        });\r\n                        toggleDisabled(!toDateDisabled);\r\n                    }} />{' '}Current Job</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        value={description} onChange={e => onChange(e)}\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Job Description\"\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addExperience })(AddExperience)\r\n","C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\profile-forms\\AddEducation.js",["132","133"],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\Mustafa\\Desktop\\traversy\\client\\src\\components\\dashboard\\Education.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":6,"column":1,"nodeType":"140","endLine":16,"endColumn":2},{"ruleId":"138","severity":1,"message":"139","line":20,"column":1,"nodeType":"140","endLine":56,"endColumn":2},{"ruleId":"141","severity":1,"message":"142","line":14,"column":8,"nodeType":"143","endLine":14,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":52,"nodeType":"147","messageId":"148","endLine":1,"endColumn":58},{"ruleId":"138","severity":1,"message":"139","line":11,"column":1,"nodeType":"140","endLine":38,"endColumn":2},{"ruleId":"145","severity":1,"message":"149","line":189,"column":15,"nodeType":"147","messageId":"148","endLine":189,"endColumn":18},{"ruleId":"138","severity":1,"message":"150","line":4,"column":1,"nodeType":"140","endLine":12,"endColumn":2},{"ruleId":"141","severity":1,"message":"151","line":43,"column":8,"nodeType":"143","endLine":43,"endColumn":17,"suggestions":"152"},{"ruleId":"145","severity":1,"message":"153","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"154","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"153","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"154","line":2,"column":16,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["157"],"no-unused-vars","'UPDATE' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],"'Link' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"163","text":"164"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"165","text":"166"},[589,591],"[getCurrentProfile]",[1820,1829],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]